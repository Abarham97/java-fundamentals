/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.nio.file.Path;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    @Test
    void testNoErrors() throws IOException {
        Path filePath = Path.of("C://Users//Barham//Desktop//labs//java-fundamentals//linter//app//src//test//resources//NoErrors.js");
        String expected = ""; // No errors
        String result = App.JavaScriptLinter(filePath);
        assertEquals(expected, result);
    }

    @Test
    void testOneError() throws IOException {
        Path filePath = Path.of("C://Users//Barham//Desktop//labs//java-fundamentals//linter//app//src//test//resources//oneError.js");
        String expected = "Missing semicolon at line 2";
        String result = App.JavaScriptLinter(filePath);
        assertEquals(expected, result);
    }

    @Test
    void testFewErrors() throws IOException {
        Path filePath = Path.of("C://Users//Barham//Desktop//labs//java-fundamentals//linter//app//src//test//resources//fewErrors.js");
        String expected = "Missing semicolon at line 7\nMissing semicolon at line 8";
        String result = App.JavaScriptLinter(filePath);
        assertEquals(expected, result);
    }

    @Test
    void testManyErrors() throws IOException {
        Path filePath = Path.of("C://Users//Barham//Desktop//labs//java-fundamentals//linter//app//src//test//resources//manyErrors.js");
        String expected = "Missing semicolon at line 3\nMissing semicolon at line 5\nMissing semicolon at line 11\nMissing semicolon at line 13";
        String result = App.JavaScriptLinter(filePath);
        assertEquals(expected, result);
    }

    @Test
    void testEmptyFile() throws IOException {
        Path filePath = Path.of("C://Users//Barham//Desktop//labs//java-fundamentals//linter//app//src//test//resources//emptyFile.js");
        String expected = ""; // No errors in an empty file
        String result = App.JavaScriptLinter(filePath);
        assertEquals(expected, result);
    }

}

